#ejercicio1---------------------------
def contar_ocurrencias(palabras):
    ocurrencias = {}
    for palabra in palabras:
        if palabra in ocurrencias:
            ocurrencias[palabra] += 1
        else:
            ocurrencias[palabra] = 1
    return ocurrencias


palabras = ["python", "java", "python", "c++"]
resultado = contar_ocurrencias(palabras)
print(resultado)

#ejercicio2----------------------------
def combinar_diccionarios(dic1, dic2):
    resultado = dic1.copy()
    
    for clave, valor in dic2.items():
       
        if clave in resultado:
            resultado[clave] += valor
        else:
           
            resultado[clave] = valor
    return resultado

dic1 = {'a': 1, 'b': 2}
dic2 = {'b': 3, 'c': 4}

resultado = combinar_diccionarios(dic1, dic2)
print(resultado) 

#ejercicio3------------------------------------
def lista_frecuencia(numeros):   
    frecuencia = {}   
    for numero in numeros:
       
        if numero in frecuencia:
            frecuencia[numero] += 1
        else:
            
            frecuencia[numero] = 1
    return frecuencia

numeros = [1, 1, 2, 3, 3, 3]
resultado = lista_frecuencia(numeros)
print(resultado)  # Salida: {1: 2, 2: 1, 3: 3}

#ejercicio 4----------------------------------------------
def filtrar_palabras_largas(palabras, longitud):
    
    return [palabra for palabra in palabras if len(palabra) > longitud +1]

palabras = ["hola", "mundo", "python", "programaciÃ³n"]
longitud = 5

resultado = filtrar_palabras_largas(palabras, longitud)
print(resultado)  

#ejercicio5-------------------------------------------------
def invertir_tuplas(lista_tuplas):
    return [tupla[::-1] for tupla in lista_tuplas]

tuplas = [(1, 2), (3, 4), (5, 6)]
resultado = invertir_tuplas(tuplas)
print(resultado)

#ejercicio6--------------------------------------------------
from collections import Counter

def valor_mas_frecuente(numeros):
    
    conteo = Counter(numeros)
    
    max_frecuencia = max(conteo.values())
    
    for numero, frecuencia in conteo.items():
        if frecuencia == max_frecuencia:
            return numero

numeros = [1, 2, 3, 1, 2, 1]
resultado = valor_mas_frecuente(numeros)
print(f' {resultado}')


#ejercicio7-------------------------------------------
def es_subconjunto(conjunto1, conjunto2):
    return conjunto1.issubset(conjunto2)
conjunto1 = {1, 2, 3}
conjunto2 = {1, 2, 3, 4, 5}
resultado = es_subconjunto(conjunto1, conjunto2)
print(resultado)


#ejercicio8----------------------------------------
from collections import defaultdict

def agrupar_por_edad(personas):
    agrupacion = defaultdict(list)  
    for persona in personas:
        agrupacion[persona["edad"]].append(persona["nombre"])  
    
    return dict(agrupacion)  

personas = [
    {"nombre": "Ana", "edad": 25},
    {"nombre": "Luis", "edad": 25},
    {"nombre": "Carlos", "edad": 30}
]

resultado = agrupar_por_edad(personas)
print(resultado)

#ejercicio9------------------------------------------
numeros = [5, 3, 8, 6, 2]
print(sorted(numeros)) 

#ejercicio10-----------------------------------------
def eliminar_menores(numeros, limite):
    return [num for num in numeros if num >= limite]
numeros = [1, 2, 3, 4, 5]
limite = 3
print(eliminar_menores(numeros, limite)) 

#ejercicio11--------------------------------------------
def aplanar_lista(lista_de_listas):
    return [item for sublista in lista_de_listas for item in sublista]
lista_de_listas = [[1, 2], [3, 4], [5]]
print(aplanar_lista(lista_de_listas)) 

#ejercicio12----------------------------------------------
def calcular_mediana(numeros):
    numeros.sort()
    n = len(numeros)
    mid = n // 2
    return (numeros[mid] if n % 2 != 0 else (numeros[mid - 1] + numeros[mid]) / 2)

numeros = [1, 3, 2, 4, 5]
print(calcular_mediana(numeros)) 


#ejercicio13----------------------------------------------------
def duplicar_elementos(numeros):
    return [num for num in numeros for _ in range(2)]

numeros = [1, 2, 3]
print(duplicar_elementos(numeros)) 

#ejercicio14-------------------------------------------------
def contar_palabras(frases):
    return {i: len(frase.split()) for i, frase in enumerate(frases)}

frases = ["Hola mundo", "Python es genial", "Me gusta programar"]
print(contar_palabras(frases)) 

#ejercicio15--------------------------------------------------
def clave_maxima(diccionario):
    return max(diccionario, key=diccionario.get)

diccionario = {'a': 10, 'b': 20, 'c': 5}
print(clave_maxima(diccionario))  

#ejercicio16---------------------------------------------------
def palindromos(palabras):
    return [palabra for palabra in palabras if palabra == palabra[::-1]]

palabras = ["ana", "oso", "hola", "level"]
print(palindromos(palabras))  
